psy <- data.frame(coef(summary(psy))) %>% slice(2)%>% add_column(Type = 'Psychosis related', .before = "Estimate")
sit <- data.frame(coef(summary(sit))) %>% slice(2)%>% add_column(Type = 'Situational crisis', .before = "Estimate")
self <- data.frame(coef(summary(self))) %>% slice(2)%>% add_column(Type = 'Self harm related', .before = "Estimate")
tot <- data.frame(coef(summary(tot))) %>% slice(2)%>% add_column(Type = 'Total', .before = "Estimate")
mh_reg_coef <- rbind(inv, sub, alc, mood, psy, sit, self, tot) %>%
rename(`Regression coef.`=Estimate, `P-val(t)`=Pr...t.., `t value`=t.value, `Std. Error`=Std..Error)
write_csv(mh_reg_coef, 'stat_tests/mh_reg_coef.csv')
sui <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Suicide attempt'), family='quasipoisson')
int <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Intoxication'), family='quasipoisson')
ass <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Assault'), family='quasipoisson')
dom <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Domestic dispute'), family='quasipoisson')
cri <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Crisis calls'), family='quasipoisson')
tot <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Total'), family='quasipoisson')
sui <- data.frame(coef(summary(sui))) %>% slice(2) %>% add_column(Type = 'Suicide attempt', .before = "Estimate")
int <- data.frame(coef(summary(int))) %>% slice(2)%>% add_column(Type = 'Intoxication', .before = "Estimate")
ass <- data.frame(coef(summary(ass))) %>% slice(2)%>% add_column(Type = 'Assault', .before = "Estimate")
dom <- data.frame(coef(summary(dom))) %>% slice(2)%>% add_column(Type = 'Domestic dispute', .before = "Estimate")
cri <- data.frame(coef(summary(cri))) %>% slice(2)%>% add_column(Type = 'Crisis calls', .before = "Estimate")
tot <- data.frame(coef(summary(tot))) %>% slice(2)%>% add_column(Type = 'Total', .before = "Estimate")
pol_reg_coef <- rbind(sui, int, ass, dom, cri, tot) %>%
rename(`Regression coef.`=Estimate, `P-val(t)`=Pr...t.., `t value`=t.value, `Std. Error`=Std..Error)
write_csv(pol_reg_coef, 'stat_tests/pol_reg_coef.csv')
vol2020 <- vol %>% filter(Year == 2020)
# l <- loess(total ~ as.numeric(date), data=vol2020)
x <- vol2020$total
out=cpt.meanvar(x,pen.value=c(2*log(length(x)),100*log(length(x))),penalty="CROPS",method="PELT", minseglen=8)
cpts.full(out)
pen.value.full(out) # gives associated penalty transition points
# CROPS does not give an optimal set of changepoints thus we may wish to explore further
plot(out, diagnostic=TRUE, main='ED volume')
plot(out,ncpts=3, main='ED volume changepoints', ylab='Daily ED visits', xlab='Day number')
png('graphs/vol_cp.png')
plot(out, diagnostic=TRUE, main='ED volume')
dev.off()
points=cpts.full(out)[6,] %>% discard(is.na)
bp=min(vol2020$date) + (points - 1)
bps <- data.frame(break_start=c(min(vol2020$date), bp),
break_end=c(bp, max(vol2020$date)))
means = c()
for (n in 1:nrow(bps)) {
x <- vol %>%
filter((date>=bps$break_start[n]) & (date<=bps$break_end[n]))
m <- mean(x$total)
means <- c(means, m)
}
bps$means = means
fill <- c('Lockdown'='red', 'Easing restrictions'='green')
vol_cp <- ggplot() +
geom_line(vol2020,
mapping=aes(x=date, y=total)) +
geom_vline(xintercept = bp, linetype = 'dashed', color='blue') +
geom_segment(bps,
mapping=aes(x=break_start,xend=break_end,y=means,yend=means),
color='blue') +
geom_rect(timeline1,
mapping=aes(xmin=Date_start, xmax=Date_end, fill=Restrictions),
ymin=-Inf, ymax=Inf, alpha=0.3) +
labs(title='ED volume changepoints', y='Daily ED visits', x='Date') +
scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
scale_fill_manual(values=fill) +
theme_bw()
vol_cp
# l <- loess(Count ~ seq(1, length(weeks), 1), data=pol %>% filter((Year == 2020) & (Type=='Total')))
pol2020 <- pol %>% filter((Year == 2020) & (Type=='Total'))
x <- pol2020$Count
out=cpt.meanvar(x,pen.value=c(2*log(length(x)),100*log(length(x))),penalty="CROPS",method="PELT", minseglen=4)
cpts.full(out)
pen.value.full(out) # gives associated penalty transition points
# CROPS does not give an optimal set of changepoints thus we may wish to explore further
plot(out, diagnostic=TRUE, main='Police responses')
# looks like the segmentation with 4 changepoints, 50,100,150,200 is the most appropriate
plot(out,ncpts=1, main='Police response changepoints', ylab='Weekly responses', xlab='Week number')
png('graphs/pol_cp.png')
plot(out, diagnostic=TRUE, main='Police responses')
dev.off()
points=cpts.full(out)[4,] %>% discard(is.na)
bp=levels(pol$week)[points]
bps <- data.frame(break_start=c(levels(pol$week)[1], bp),
fac_start= c(1, points),
break_end=c(bp, levels(pol$week)[length(levels(pol$week))]),
fac_end=c(points, length(levels(pol$week))))
means = c()
for (n in 1:nrow(bps)) {
x <- pol2020 %>%
filter((as.integer(week)>=bps$fac_start[n]) & (as.integer(week)<=bps$fac_end[n]))
m <- mean(x$Count)
means <- c(means, m)
}
bps$means = means
fill <- c('Lockdown'='red', 'Easing restrictions'='green')
pol_cp <- ggplot() +
geom_line(pol2020,
mapping = aes(x=week, y=Count, group=Year)) +
geom_vline(xintercept = bp, linetype = 'dashed', color='blue') +
geom_segment(bps,
mapping=aes(x=break_start,xend=break_end,y=means,yend=means),
color='blue') +
geom_rect(timeline,
mapping=aes(xmin=Date_start, xmax=Date_end, fill=Restrictions),
ymin=-Inf, ymax=Inf, alpha=0.3) +
labs(title='Police response changepoints', y='Weekly responses', x='Week') +
scale_fill_manual(values=fill) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust=1))
pol_cp
# l <- loess(Count ~ seq(1, length(weeks), 1), data=mh %>% filter((Year == 2020) & (Type=='Total')))
mh2020 <- mh %>% filter((Year == 2020) & (Type=='Total'))
x <- mh2020$Count
out=cpt.meanvar(x,pen.value=c(2*log(length(x)),100*log(length(x))),penalty="CROPS",method="PELT", minseglen = 4)
cpts.full(out)
pen.value.full(out) # gives associated penalty transition points
# CROPS does not give an optimal set of changepoints thus we may wish to explore further
plot(out, diagnostic=TRUE, main='Mental health diagnoses')
# looks like the segmentation with 4 changepoints, 50,100,150,200 is the most appropriate
plot(out,ncpts=1, main='Mental health diagnoses changepoints', xlab='Week number', ylab='Weekly diagnoses')
png('graphs/mh_cp.png')
plot(out, diagnostic=TRUE, main='Mental health diagnoses')
dev.off()
points=cpts.full(out)[3,] %>% discard(is.na)
bp=levels(mh$week)[points]
bps <- data.frame(break_start=c(levels(mh$week)[1], bp),
fac_start= c(1, points),
break_end=c(bp, levels(mh$week)[length(levels(mh$week))]),
fac_end=c(points, length(levels(mh$week))))
means = c()
for (n in 1:nrow(bps)) {
x <- mh2020 %>%
filter((as.integer(week)>=bps$fac_start[n]) & (as.integer(week)<=bps$fac_end[n]))
m <- mean(x$Count)
means <- c(means, m)
}
bps$means = means
fill <- c('Lockdown'='red', 'Easing restrictions'='green')
mh_cp <- ggplot() +
geom_line(mh2020,
mapping = aes(x=week, y=Count, group=Year)) +
geom_vline(xintercept = bp, linetype = 'dashed', color='blue') +
geom_segment(bps,
mapping=aes(x=break_start,xend=break_end,y=means,yend=means),
color='blue') +
geom_rect(timeline,
mapping=aes(xmin=Date_start, xmax=Date_end, fill=Restrictions),
ymin=-Inf, ymax=Inf, alpha=0.3) +
labs(title='Mental health diagnoses changepoints', x='Week', y='Weekly diagnoses') +
scale_fill_manual(values=fill) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust=1),
axis.title.x=element_blank())
mh_cp
comb <- ggpubr::ggarrange(vol_cp ,mh_cp, pol_cp, ncol=1, legend='right', common.legend = TRUE)
ggsave('graphs/changepoints.png', comb, height = 11, width = 8.5, units = 'in')
comb
vol2020 <- vol %>% filter(Year == 2020)
# l <- loess(total ~ as.numeric(date), data=vol2020)
x <- vol2020$total
out=cpt.meanvar(x,pen.value=c(2*log(length(x)),100*log(length(x))),penalty="CROPS",method="PELT", minseglen=8)
cpts.full(out)
pen.value.full(out) # gives associated penalty transition points
# CROPS does not give an optimal set of changepoints thus we may wish to explore further
plot(out, diagnostic=TRUE, main='ED volume')
plot(out,ncpts=3, main='ED volume changepoints', ylab='Daily ED visits', xlab='Day number')
png('graphs/vol_cp.png')
plot(out, diagnostic=TRUE, main='ED volume')
dev.off()
points=cpts.full(out)[6,] %>% discard(is.na)
bp=min(vol2020$date) + (points - 1)
bps <- data.frame(break_start=c(min(vol2020$date), bp),
break_end=c(bp, max(vol2020$date)))
means = c()
for (n in 1:nrow(bps)) {
x <- vol %>%
filter((date>=bps$break_start[n]) & (date<=bps$break_end[n]))
m <- mean(x$total)
means <- c(means, m)
}
bps$means = means
fill <- c('Lockdown'='red', 'Easing restrictions'='green')
vol_cp <- ggplot() +
geom_line(vol2020,
mapping=aes(x=date, y=total)) +
geom_vline(xintercept = bp, linetype = 'dashed', color='blue') +
geom_segment(bps,
mapping=aes(x=break_start,xend=break_end,y=means,yend=means),
color='blue') +
geom_rect(timeline1,
mapping=aes(xmin=Date_start, xmax=Date_end, fill=Restrictions),
ymin=-Inf, ymax=Inf, alpha=0.3) +
labs(title='ED volume changepoints', y='Daily ED visits', x='Date') +
scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
scale_fill_manual(values=fill) +
theme_bw()
vol_cp
View(bps)
vol_lock
vol_lock %>%
group_by(Year) %>%
summarize(sum(total))
mh_lock
vol_lock %>%
group_by(Year) %>%
summarize(sum(total))
mh_lock %>%
filter(Type == 'Total') %>%
group_by(Year) %>%
summarize(sum(Count))
vol_lock %>%
group_by(Year) %>%
summarize(sum(total))
mh_lock %>%
filter(Type == 'Total') %>%
group_by(Year)
vol_lock %>%
group_by(Year) %>%
summarize(sum(total))
mh_lock %>%
filter(Type == 'Total') %>%
group_by(Year) %>%
summarize(sum(Count))
View(vol)
mh <- read_csv('data/mh_counts.csv') %>%
pivot_longer(cols=`Involuntary Form 1`:`Total`,
names_to='Type',
values_to='Count') %>%
mutate(Year=factor(Year)) %>%
mutate(week=factor(week, levels=weeks, ordered = TRUE))
mh_lock <- mh %>%
filter(Restrictions == 'Lockdown')
pol <- read_csv('data/pol_counts.csv') %>%
pivot_longer(cols=`Suicide attempt`:`Total`,
names_to='Type',
values_to='Count') %>%
mutate(Year=factor(Year)) %>%
mutate(week=factor(week, levels=weeks, ordered = TRUE))
pol_lock <- pol %>%
filter(Restrictions == 'Lockdown')
cmh_ed <- read_excel('data/ED Volume Cambridge.xlsx')
grh_ed <- read_excel('data/ED volumes GRH.xlsx')
smh_ed <- read_excel('data/ED volumes SMH.xlsx')
vol <- smh_ed %>%
left_join(grh_ed, by=c("Date of ED visit (reg)" = "Day of Triage_DT")) %>%
left_join(cmh_ed, by=c("Date of ED visit (reg)" = "Triage Date")) %>%
rename(date=`Date of ED visit (reg)`, smh=`# of cases`, grh=`Number of Records`, cmh=Volume) %>%
mutate(total=smh+grh+cmh) %>%
mutate(Year=as.factor(lubridate::year(date))) %>%
drop_na() %>%
mutate(date=as.Date(date))
write_csv(vol, 'data/ed_counts')
vol_lock <- vol %>%
filter(((date>=as.Date('2020-03-17')) & (date<=as.Date('2020-05-04'))) |
((date>=as.Date('2019-03-17')) & (date<=as.Date('2019-05-04'))))
timeline <- data.frame(Restrictions=c('Lockdown', 'Easing restrictions'),
Date_start=c('Mar 15 - Mar 21', 'Apr 26 - May 2'),
Date_end=c('Apr 26 - May 2', 'May 31 - June 6'))
timeline1 <- data.frame(Restrictions=c('Lockdown', 'Easing restrictions'),
Date_start=as.Date(c('2020-03-17', '2020-05-04')),
Date_end=as.Date(c('2020-05-04', '2020-06-02')))
mh <- read_csv('data/mh_counts.csv') %>%
pivot_longer(cols=`Involuntary Form 1`:`Total`,
names_to='Type',
values_to='Count') %>%
mutate(Year=factor(Year)) %>%
mutate(week=factor(week, levels=weeks, ordered = TRUE))
mh_lock <- mh %>%
filter(Restrictions == 'Lockdown')
pol <- read_csv('data/pol_counts.csv') %>%
pivot_longer(cols=`Suicide attempt`:`Total`,
names_to='Type',
values_to='Count') %>%
mutate(Year=factor(Year)) %>%
mutate(week=factor(week, levels=weeks, ordered = TRUE))
pol_lock <- pol %>%
filter(Restrictions == 'Lockdown')
cmh_ed <- read_excel('data/ED Volume Cambridge.xlsx')
grh_ed <- read_excel('data/ED volumes GRH.xlsx')
smh_ed <- read_excel('data/ED volumes SMH.xlsx')
vol <- smh_ed %>%
left_join(grh_ed, by=c("Date of ED visit (reg)" = "Day of Triage_DT")) %>%
left_join(cmh_ed, by=c("Date of ED visit (reg)" = "Triage Date")) %>%
rename(date=`Date of ED visit (reg)`, smh=`# of cases`, grh=`Number of Records`, cmh=Volume) %>%
mutate(total=smh+grh+cmh) %>%
mutate(Year=as.factor(lubridate::year(date))) %>%
drop_na() %>%
mutate(date=as.Date(date))
write_csv(vol, 'data/ed_counts.csv')
vol_lock <- vol %>%
filter(((date>=as.Date('2020-03-17')) & (date<=as.Date('2020-05-04'))) |
((date>=as.Date('2019-03-17')) & (date<=as.Date('2019-05-04'))))
timeline <- data.frame(Restrictions=c('Lockdown', 'Easing restrictions'),
Date_start=c('Mar 15 - Mar 21', 'Apr 26 - May 2'),
Date_end=c('Apr 26 - May 2', 'May 31 - June 6'))
timeline1 <- data.frame(Restrictions=c('Lockdown', 'Easing restrictions'),
Date_start=as.Date(c('2020-03-17', '2020-05-04')),
Date_end=as.Date(c('2020-05-04', '2020-06-02')))
library(changepoint)
library(tidyverse)
library(readxl)
weeks <- c('Mar 1 - Mar 7', 'Mar 8 - Mar 14', 'Mar 15 - Mar 21', 'Mar 22 - Mar 28', 'Mar 29 - Apr 4', 'Apr 5 - Apr 11', 'Apr 12 - Apr 18', 'Apr 19 - Apr 25', 'Apr 26 - May 2', 'May 3 - May 9', 'May 10 - May 16', 'May 17 - May 23', 'May 24 - May 30', 'May 31 - June 6', 'June 7 - June 13', 'June 14 - June 20', 'June 21 - June 27', 'June 28 - July 4', 'July 5 - July 11', 'July 12 - July 18', 'July 19 - July 25', 'July 26 -  Aug 1', 'Aug 2 - Aug 8', 'Aug 9 - Aug 15', 'Aug 16 - Aug 22', 'Aug 23 - Aug 29', 'Aug 30 - Sep 5')
mh <- read_csv('data/mh_counts.csv') %>%
pivot_longer(cols=`Involuntary Form 1`:`Total`,
names_to='Type',
values_to='Count') %>%
mutate(Year=factor(Year)) %>%
mutate(week=factor(week, levels=weeks, ordered = TRUE))
mh_lock <- mh %>%
filter(Restrictions == 'Lockdown')
pol <- read_csv('data/pol_counts.csv') %>%
pivot_longer(cols=`Suicide attempt`:`Total`,
names_to='Type',
values_to='Count') %>%
mutate(Year=factor(Year)) %>%
mutate(week=factor(week, levels=weeks, ordered = TRUE))
pol_lock <- pol %>%
filter(Restrictions == 'Lockdown')
cmh_ed <- read_excel('data/ED Volume Cambridge.xlsx')
grh_ed <- read_excel('data/ED volumes GRH.xlsx')
smh_ed <- read_excel('data/ED volumes SMH.xlsx')
vol <- smh_ed %>%
left_join(grh_ed, by=c("Date of ED visit (reg)" = "Day of Triage_DT")) %>%
left_join(cmh_ed, by=c("Date of ED visit (reg)" = "Triage Date")) %>%
rename(date=`Date of ED visit (reg)`, smh=`# of cases`, grh=`Number of Records`, cmh=Volume) %>%
mutate(total=smh+grh+cmh) %>%
mutate(Year=as.factor(lubridate::year(date))) %>%
drop_na() %>%
mutate(date=as.Date(date))
write_csv(vol, 'data/ed_counts.csv')
vol_lock <- vol %>%
filter(((date>=as.Date('2020-03-17')) & (date<=as.Date('2020-05-04'))) |
((date>=as.Date('2019-03-17')) & (date<=as.Date('2019-05-04'))))
timeline <- data.frame(Restrictions=c('Lockdown', 'Easing restrictions'),
Date_start=c('Mar 15 - Mar 21', 'Apr 26 - May 2'),
Date_end=c('Apr 26 - May 2', 'May 31 - June 6'))
timeline1 <- data.frame(Restrictions=c('Lockdown', 'Easing restrictions'),
Date_start=as.Date(c('2020-03-17', '2020-05-04')),
Date_end=as.Date(c('2020-05-04', '2020-06-02')))
vol_lock %>%
group_by(Year) %>%
summarize(sum(total))
mh_lock %>%
filter(Type == 'Total') %>%
group_by(Year) %>%
summarize(sum(Count))
vol1 <- glm(total ~ Year, data = vol_lock, family = 'quasipoisson')
# Poisson regression
fig1 <- data.frame(coef(summary(vol1))) %>%
slice(2) %>%
add_column(Type = 'Volume', .before='Estimate') %>%
rename(`Regression coef.`=Estimate, `P-val(t)`=Pr...t.., `t value`=t.value, `Std. Error`=Std..Error)
write_csv(fig1, 'stat_tests/vol_reg_coef.csv')
inv <- glm(Count ~ Year, data=mh_lock %>% filter(Type=='Involuntary Form 1'), family='quasipoisson')
sub <- glm(Count ~ Year, data=mh_lock %>% filter(Type=='Substance related'), family='quasipoisson')
alc <- glm(Count ~ Year, data=mh_lock %>% filter(Type=='Alcohol related'), family='quasipoisson')
mood <- glm(Count ~ Year, data=mh_lock %>% filter(Type=='Mood related'), family='quasipoisson')
psy <- glm(Count ~ Year, data=mh_lock %>% filter(Type=='Psychosis related'), family='quasipoisson')
sit <- glm(Count ~ Year, data=mh_lock %>% filter(Type=='Situational crisis'), family='quasipoisson')
self <- glm(Count ~ Year, data=mh_lock %>% filter(Type=='Self harm related'), family='quasipoisson')
tot <- glm(Count ~ Year, data=mh_lock %>% filter(Type=='Total'), family='quasipoisson')
inv <- data.frame(coef(summary(inv))) %>% slice(2) %>% add_column(Type = 'Involuntary Form 1', .before = "Estimate")
sub <- data.frame(coef(summary(sub))) %>% slice(2)%>% add_column(Type = 'Substance related', .before = "Estimate")
alc <- data.frame(coef(summary(alc))) %>% slice(2)%>% add_column(Type = 'Alcohol related', .before = "Estimate")
mood <- data.frame(coef(summary(mood))) %>% slice(2)%>% add_column(Type = 'Mood related', .before = "Estimate")
psy <- data.frame(coef(summary(psy))) %>% slice(2)%>% add_column(Type = 'Psychosis related', .before = "Estimate")
sit <- data.frame(coef(summary(sit))) %>% slice(2)%>% add_column(Type = 'Situational crisis', .before = "Estimate")
self <- data.frame(coef(summary(self))) %>% slice(2)%>% add_column(Type = 'Self harm related', .before = "Estimate")
tot <- data.frame(coef(summary(tot))) %>% slice(2)%>% add_column(Type = 'Total', .before = "Estimate")
mh_reg_coef <- rbind(inv, sub, alc, mood, psy, sit, self, tot) %>%
rename(`Regression coef.`=Estimate, `P-val(t)`=Pr...t.., `t value`=t.value, `Std. Error`=Std..Error)
write_csv(mh_reg_coef, 'stat_tests/mh_reg_coef.csv')
sui <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Suicide attempt'), family='quasipoisson')
int <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Intoxication'), family='quasipoisson')
ass <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Assault'), family='quasipoisson')
dom <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Domestic dispute'), family='quasipoisson')
cri <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Crisis calls'), family='quasipoisson')
tot <- glm(Count ~ Year, data=pol_lock %>% filter(Type=='Total'), family='quasipoisson')
sui <- data.frame(coef(summary(sui))) %>% slice(2) %>% add_column(Type = 'Suicide attempt', .before = "Estimate")
int <- data.frame(coef(summary(int))) %>% slice(2)%>% add_column(Type = 'Intoxication', .before = "Estimate")
ass <- data.frame(coef(summary(ass))) %>% slice(2)%>% add_column(Type = 'Assault', .before = "Estimate")
dom <- data.frame(coef(summary(dom))) %>% slice(2)%>% add_column(Type = 'Domestic dispute', .before = "Estimate")
cri <- data.frame(coef(summary(cri))) %>% slice(2)%>% add_column(Type = 'Crisis calls', .before = "Estimate")
tot <- data.frame(coef(summary(tot))) %>% slice(2)%>% add_column(Type = 'Total', .before = "Estimate")
pol_reg_coef <- rbind(sui, int, ass, dom, cri, tot) %>%
rename(`Regression coef.`=Estimate, `P-val(t)`=Pr...t.., `t value`=t.value, `Std. Error`=Std..Error)
write_csv(pol_reg_coef, 'stat_tests/pol_reg_coef.csv')
vol2020 <- vol %>% filter(Year == 2020)
# l <- loess(total ~ as.numeric(date), data=vol2020)
x <- vol2020$total
out=cpt.meanvar(x,pen.value=c(2*log(length(x)),100*log(length(x))),penalty="CROPS",method="PELT", minseglen=8)
cpts.full(out)
pen.value.full(out) # gives associated penalty transition points
# CROPS does not give an optimal set of changepoints thus we may wish to explore further
plot(out, diagnostic=TRUE, main='ED volume')
plot(out,ncpts=3, main='ED volume changepoints', ylab='Daily ED visits', xlab='Day number')
png('graphs/vol_cp.png')
plot(out, diagnostic=TRUE, main='ED volume')
dev.off()
points=cpts.full(out)[6,] %>% discard(is.na)
bp=min(vol2020$date) + (points - 1)
bps <- data.frame(break_start=c(min(vol2020$date), bp),
break_end=c(bp, max(vol2020$date)))
means = c()
for (n in 1:nrow(bps)) {
x <- vol %>%
filter((date>=bps$break_start[n]) & (date<=bps$break_end[n]))
m <- mean(x$total)
means <- c(means, m)
}
bps$means = means
fill <- c('Lockdown'='red', 'Easing restrictions'='green')
vol_cp <- ggplot() +
geom_line(vol2020,
mapping=aes(x=date, y=total)) +
geom_vline(xintercept = bp, linetype = 'dashed', color='blue') +
geom_segment(bps,
mapping=aes(x=break_start,xend=break_end,y=means,yend=means),
color='blue') +
geom_rect(timeline1,
mapping=aes(xmin=Date_start, xmax=Date_end, fill=Restrictions),
ymin=-Inf, ymax=Inf, alpha=0.3) +
labs(title='ED volume changepoints', y='Daily ED visits', x='Date') +
scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
scale_fill_manual(values=fill) +
theme_bw()
vol_cp
# l <- loess(Count ~ seq(1, length(weeks), 1), data=pol %>% filter((Year == 2020) & (Type=='Total')))
pol2020 <- pol %>% filter((Year == 2020) & (Type=='Total'))
x <- pol2020$Count
out=cpt.meanvar(x,pen.value=c(2*log(length(x)),100*log(length(x))),penalty="CROPS",method="PELT", minseglen=4)
cpts.full(out)
pen.value.full(out) # gives associated penalty transition points
# CROPS does not give an optimal set of changepoints thus we may wish to explore further
plot(out, diagnostic=TRUE, main='Police responses')
# looks like the segmentation with 4 changepoints, 50,100,150,200 is the most appropriate
plot(out,ncpts=1, main='Police response changepoints', ylab='Weekly responses', xlab='Week number')
png('graphs/pol_cp.png')
plot(out, diagnostic=TRUE, main='Police responses')
dev.off()
points=cpts.full(out)[4,] %>% discard(is.na)
bp=levels(pol$week)[points]
bps <- data.frame(break_start=c(levels(pol$week)[1], bp),
fac_start= c(1, points),
break_end=c(bp, levels(pol$week)[length(levels(pol$week))]),
fac_end=c(points, length(levels(pol$week))))
means = c()
for (n in 1:nrow(bps)) {
x <- pol2020 %>%
filter((as.integer(week)>=bps$fac_start[n]) & (as.integer(week)<=bps$fac_end[n]))
m <- mean(x$Count)
means <- c(means, m)
}
bps$means = means
fill <- c('Lockdown'='red', 'Easing restrictions'='green')
pol_cp <- ggplot() +
geom_line(pol2020,
mapping = aes(x=week, y=Count, group=Year)) +
geom_vline(xintercept = bp, linetype = 'dashed', color='blue') +
geom_segment(bps,
mapping=aes(x=break_start,xend=break_end,y=means,yend=means),
color='blue') +
geom_rect(timeline,
mapping=aes(xmin=Date_start, xmax=Date_end, fill=Restrictions),
ymin=-Inf, ymax=Inf, alpha=0.3) +
labs(title='Police response changepoints', y='Weekly responses', x='Week') +
scale_fill_manual(values=fill) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust=1))
pol_cp
# l <- loess(Count ~ seq(1, length(weeks), 1), data=mh %>% filter((Year == 2020) & (Type=='Total')))
mh2020 <- mh %>% filter((Year == 2020) & (Type=='Total'))
x <- mh2020$Count
out=cpt.meanvar(x,pen.value=c(2*log(length(x)),100*log(length(x))),penalty="CROPS",method="PELT", minseglen = 4)
cpts.full(out)
pen.value.full(out) # gives associated penalty transition points
# CROPS does not give an optimal set of changepoints thus we may wish to explore further
plot(out, diagnostic=TRUE, main='Mental health diagnoses')
# looks like the segmentation with 4 changepoints, 50,100,150,200 is the most appropriate
plot(out,ncpts=1, main='Mental health diagnoses changepoints', xlab='Week number', ylab='Weekly diagnoses')
png('graphs/mh_cp.png')
plot(out, diagnostic=TRUE, main='Mental health diagnoses')
dev.off()
points=cpts.full(out)[3,] %>% discard(is.na)
bp=levels(mh$week)[points]
bps <- data.frame(break_start=c(levels(mh$week)[1], bp),
fac_start= c(1, points),
break_end=c(bp, levels(mh$week)[length(levels(mh$week))]),
fac_end=c(points, length(levels(mh$week))))
means = c()
for (n in 1:nrow(bps)) {
x <- mh2020 %>%
filter((as.integer(week)>=bps$fac_start[n]) & (as.integer(week)<=bps$fac_end[n]))
m <- mean(x$Count)
means <- c(means, m)
}
bps$means = means
fill <- c('Lockdown'='red', 'Easing restrictions'='green')
mh_cp <- ggplot() +
geom_line(mh2020,
mapping = aes(x=week, y=Count, group=Year)) +
geom_vline(xintercept = bp, linetype = 'dashed', color='blue') +
geom_segment(bps,
mapping=aes(x=break_start,xend=break_end,y=means,yend=means),
color='blue') +
geom_rect(timeline,
mapping=aes(xmin=Date_start, xmax=Date_end, fill=Restrictions),
ymin=-Inf, ymax=Inf, alpha=0.3) +
labs(title='Mental health diagnoses changepoints', x='Week', y='Weekly diagnoses') +
scale_fill_manual(values=fill) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust=1),
axis.title.x=element_blank())
mh_cp
comb <- ggpubr::ggarrange(vol_cp ,mh_cp, pol_cp, ncol=1, legend='right', common.legend = TRUE)
ggsave('graphs/changepoints.png', comb, height = 11, width = 8.5, units = 'in')
comb
