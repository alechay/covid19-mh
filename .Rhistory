geom_point() +
stat_summary(geom='line')
?stat_summary
ggplot(crisis, aes(x=week, y=count, color=Year)) +
geom_point() +
stat_summary(aes(x=week, y=count), geom='line')
ggplot(crisis, aes(x=week, y=count, group=1)) +
geom_point() +
stat_summary(geom='line')
ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point() +
geom_line()
ggplot(crisis, aes(x=week, y=count, color=Year)) +
geom_point() +
geom_line()
ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year))
?xlab
ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.model <- data.frame(week = data$week,
Mean_R = my.fitted)
ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week,
Mean_R = my.fitted)
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week,
Mean_R = my.fitted)
p + geom_line(my.model,
mapping=aes(x = week, y = Mean_R))
View(my.model)
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week,
Year = my.fitted)
p + geom_line(my.model,
mapping=aes(x = week, y = Year))
View(my.seg)
summary(my.seg)
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week,
Year = my.fitted)
p + geom_smooth()
?geom_smooth()
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week,
Year = my.fitted)
p + geom_smooth(method=lm)
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week,
Year = my.fitted)
p + geom_smooth(method=lm)
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week, Year = my.fitted) %>%
mutate(week=factor(week, levels=week_order))
p + geom_line(my.model, aes(x=week, y=Year))
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week, Year = my.fitted) %>%
mutate(week=factor(week, levels=week_order))
p + geom_line(my.model, mapping=aes(x=week, y=Year))
View(my.model)
p + geom_line(my.model, mapping=aes(x=week, y=count))
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week, count = my.fitted) %>%
mutate(week=factor(week, levels=week_order))
p + geom_line(my.model, mapping=aes(x=week, y=count))
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week, count = my.fitted) %>%
mutate(week=factor(week, levels=week_order))
p + geom_line(my.model, mapping=aes(x=week, y=count, color=Year))
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week, count = my.fitted) %>%
mutate(week=factor(week, levels=week_order))
p + geom_line(my.model, mapping=aes(x=week, y=count))
?rep
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
library(segmented)
data <- crisis %>%
filter(Year==2020)
my.lm <- lm(count ~ week, data = data)
my.seg <- segmented(my.lm, seg.Z = ~ week)
my.fitted <- fitted(my.seg)
my.model <- data.frame(week = data$week, count = my.fitted) %>%
mutate(week=factor(week, levels=week_order)) %>%
mutate(Year=rep(2020, times=27))
p + geom_line(my.model, mapping=aes(x=week, y=count))
summary(my.seg)
View(my.model)
View(data)
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
p
# library(segmented)
# data <- crisis %>%
#   filter(Year==2020)
# my.lm <- lm(count ~ week, data = data)
# my.seg <- segmented(my.lm, seg.Z = ~ week)
# my.fitted <- fitted(my.seg)
# my.model <- data.frame(week = data$week, count = my.fitted) %>%
#   mutate(week=factor(week, levels=week_order)) %>%
#   mutate(Year=rep(2020, times=27))
# p + geom_line(my.model, mapping=aes(x=week, y=count))
View(crisis)
crisis$count[crisis$Year==2020 & crisis$week=='May 31 - June 6']
crisis$count[crisis$Year==2020 & crisis$week=='May 31 - June 6']
crisis$count[crisis$Year==2020 & crisis$week=='July 12 - July 18']
max <- crisis$count[crisis$Year==2020 & crisis$week=='May 31 - June 6']
min <- crisis$count[crisis$Year==2020 & crisis$week=='July 12 - July 18']
(max-min)/min
min <- crisis$count[crisis$Year==2020 & crisis$week=='May 31 - June 6']
max <- crisis$count[crisis$Year==2020 & crisis$week=='July 12 - July 18']
(max-min)/min
View(cmh_mh)
View(grh_mh)
View(smh_mh)
mh_tot <- rbind(cmh_mh, grh_mh, smh_mh)
View(mh_tot)
rbind(cmh_mh, grh_mh, smh_mh) %>%
group_by(year) %>%
summarize(sum(total))
rbind(cmh_mh, grh_mh, smh_mh) %>%
group_by(Year) %>%
summarize(sum(count))
library(zoo) # moving averages
library(plyr)
library(tidyverse)
library(readxl)
library(tibbletime)
library(lubridate)
# volume data
cmh_ed <- read_excel('data/ED Volume Cambridge.xlsx')
grh_ed <- read_excel('data/ED volumes GRH.xlsx')
smh_ed <- read_excel('data/ED volumes SMH.xlsx')
# mental health data
cmh_mh <- read_excel('data/COVID-19 data sheet edited Jan 23.xlsx', sheet='cmh') %>%
replace(is.na(.), 0) %>%
pivot_longer(cols = `March 1 - March 7`:`August 30th - September 5th`,
names_to='week',
values_to='count')
grh_mh <- read_excel('data/COVID-19 data sheet edited Jan 23.xlsx', sheet='grh') %>%
replace(is.na(.), 0) %>%
pivot_longer(cols = `March 1 - March 7`:`August 30th - September 5th`,
names_to='week',
values_to='count')
smh_mh <- read_excel('data/COVID-19 data sheet edited Jan 23.xlsx', sheet='smh') %>%
replace(is.na(.), 0) %>%
pivot_longer(cols = `March 1 - March 7`:`August 30th - September 5th`,
names_to='week',
values_to='count')
# Police data
pol <- read_excel('data/COVID-19 data sheet edited Jan 23.xlsx', sheet='pol') %>%
filter(Subtype!='Drug overdose (monthly totals)' & Type!='EMS data') %>%
mutate(`June 21 - June 27`=as.double(`June 21 - June 27`)) %>%
replace(is.na(.), 0) %>%
pivot_longer(cols = `March 1 - March 7`:`August 30th - September 5th`,
names_to='week',
values_to='count')
vol <- smh_ed %>% left_join(grh_ed, by=c("Date of ED visit (reg)" = "Day of Triage_DT")) %>%
left_join(cmh_ed, by=c("Date of ED visit (reg)" = "Triage Date")) %>%
rename(date=`Date of ED visit (reg)`, smh=`# of cases`, grh=`Number of Records`, cmh=Volume) %>%
mutate(total=smh+grh+cmh) %>%
mutate(year=as.factor(year(date)))
vol %>%
group_by(year) %>%
summarize(sum(total))
rbind(cmh_mh, grh_mh, smh_mh) %>%
group_by(Year) %>%
summarize(sum(count))
vol <- vol %>% drop_na() %>%
group_by(year) %>%
mutate(roll = rollmean(total, k = 7, fill = NA)) %>%
mutate(date = if_else(year==2019, date+years(1), date))
p <- ggplot(vol, aes(x=date, y=total, color=year)) +
geom_line() +
geom_line(aes(x=date, y=roll)) +
scale_color_manual(values=c("green", "blue")) +
ylab('daily ED visits') +
annotate('rect', xmin=as.POSIXct('2020-03-17'), xmax=as.POSIXct('2020-05-04'),
ymin=-Inf, ymax=Inf, fill='red', alpha=0.3)
ggsave('graphs/vol.png', p, height = 8.5, width = 11, units = 'in')
p
v2020 <- vol %>%
filter(year==2020)
max <- max(v2020$roll, na.rm = TRUE)
v2020$date[v2020$roll==max(v2020$roll, na.rm = TRUE)]
min <- min(v2020$roll, na.rm = TRUE)
v2020$date[v2020$roll==min(v2020$roll, na.rm = TRUE)]
(max-min)/max
vol %>% mutate(date=as.Date(date)) %>%
filter(date>='2019-03-17' & date<='2020-05-04') %>%
filter(date<='2019-05-04' | date>='2020-03-17') %>%
ggplot(aes(x=total, fill=year)) +
geom_histogram()
volume <- vol %>% mutate(date=as.Date(date)) %>%
filter(date>='2019-03-17' & date<='2020-05-04') %>%
filter(date<='2019-05-04' | date>='2020-03-17')
# Poisson regression
poisson_vol <- glm(total ~ year, family='quasipoisson', data=volume)
fig1 <- data.frame(coef(summary(poisson_vol))) %>%
slice(2) %>%
rename(`p-val(t)`=Pr...t..)
write_csv(fig1, 'stat_tests/fig1.csv')
summary(poisson_vol)
get_data <- function(data, type, subtype=NULL) {
weeks <- c('March 15 - March 21\r\n\r\n', 'Mar 22 - Mar 28', 'Mar 29 - Apr 4', 'April 5 - 11', 'April 12 - 18', 'April 19 - 25', 'April 26 - May 2')
if (is.null(subtype)) {
smh <- data$smh_mh %>%
filter(week %in% weeks) %>%
filter(Type==type) %>%
group_by(Year, week) %>%
summarize(count=sum(count)) %>%
mutate(date=paste(week, Year, sep=' '))
grh <- data$grh_mh %>%
filter(week %in% weeks) %>%
filter(Type==type) %>%
group_by(Year, week) %>%
summarize(count=sum(count)) %>%
mutate(date=paste(week, Year, sep=' '))
cmh <- data$cmh_mh %>%
filter(week %in% weeks) %>%
filter(Type==type) %>%
group_by(Year, week) %>%
summarize(count=sum(count)) %>%
mutate(date=paste(week, Year, sep=' '))
} else {
smh <- data$smh_mh %>%
filter(week %in% weeks) %>%
filter(Type==type, Subtype==subtype) %>%
group_by(Year, week) %>%
summarize(count=sum(count)) %>%
mutate(date=paste(week, Year, sep=' '))
grh <- data$grh_mh %>%
filter(week %in% weeks) %>%
filter(Type==type, Subtype==subtype) %>%
group_by(Year, week) %>%
summarize(count=sum(count)) %>%
mutate(date=paste(week, Year, sep=' '))
cmh <- data$cmh_mh %>%
filter(week %in% weeks) %>%
filter(Type==type, Subtype==subtype) %>%
group_by(Year, week) %>%
summarize(count=sum(count)) %>%
mutate(date=paste(week, Year, sep=' '))
}
whole <- smh %>%
left_join(grh, by='date') %>%
left_join(cmh, by='date') %>%
mutate(total=count+count.x+count.y) %>%
select(Year, week, total) %>%
mutate(Year=as.factor(Year))
return(whole)
}
mh <- list(smh_mh=smh_mh, grh_mh=grh_mh, cmh_mh=cmh_mh)
involuntary <- get_data(mh, 'Form 1 Total')
# Poisson regression
poisson_inv <- glm(total ~ Year, data=involuntary, family='poisson')
summary(poisson_inv)
substance <- get_data(mh, 'Substance related', 'Substance misuse/abuse')
# Poisson regression
poisson_sub <- glm(total ~ Year, data=substance, family='quasipoisson')
summary(poisson_sub)
alcohol <- get_data(mh, 'Substance related', 'Alcohol (separate)')
# Poisson regression
poisson_alc <- glm(total ~ Year, data=alcohol, family='quasipoisson')
summary(poisson_alc)
mood <- get_data(mh, 'Mood related')
# Poisson regression
poisson_mood <- glm(total ~ Year, data=mood, family='quasipoisson')
summary(poisson_mood)
psychosis <- get_data(mh, 'Psychosis related')
# Poisson regression
poisson_psy <- glm(total ~ Year, data=psychosis, family='quasipoisson')
summary(poisson_psy)
situational <- get_data(mh, 'Situational crisis')
# Poisson regression
poisson_sit <- glm(total ~ Year, data=situational, family='poisson')
summary(poisson_sit)
harm <- get_data(mh, 'Self harm')
# Poisson regression
poisson_harm <- glm(total ~ Year, data=harm, family='poisson')
summary(poisson_harm)
get_fig2 <- function(poisson_fig2) {
inv <- data.frame(coef(summary(poisson_fig2$poisson_inv))) %>%
slice(2) %>%
select(z.value, Pr...z..)
sub <- data.frame(coef(summary(poisson_fig2$poisson_sub))) %>%
slice(2) %>%
select(t.value, Pr...t..)
alc <- data.frame(coef(summary(poisson_fig2$poisson_alc))) %>%
slice(2) %>%
select(t.value, Pr...t..)
mood <- data.frame(coef(summary(poisson_fig2$poisson_mood))) %>%
slice(2) %>%
select(t.value, Pr...t..)
psy <- data.frame(coef(summary(poisson_fig2$poisson_psy))) %>%
slice(2) %>%
select(t.value, Pr...t..)
sit <- data.frame(coef(summary(poisson_fig2$poisson_sit))) %>%
slice(2) %>%
select(z.value, Pr...z..)
harm <- data.frame(coef(summary(poisson_fig2$poisson_harm))) %>%
slice(2) %>%
select(z.value, Pr...z..)
tot <- rbind.fill(inv, sub, alc, mood, psy, sit, harm)
tot$type <- c('Involuntary - Form 1', 'Substance related', 'Alcohol related', 'Mood related', 'Psychosis related', 'Situational crisis', 'Self harm related')
tot <- tot %>%
rename(`p-val(z)`=Pr...z.., `p-val(t)`=Pr...t..)
return(tot)
}
poisson_fig2 <- list(poisson_inv=poisson_inv, poisson_sub=poisson_sub, poisson_alc=poisson_alc, poisson_mood=poisson_mood, poisson_psy=poisson_psy, poisson_sit=poisson_sit, poisson_harm=poisson_harm)
fig2 <- get_fig2(poisson_fig2)
write_csv(fig2, 'stat_tests/fig2.csv')
weeks <- c('March 15 - March 21\r\n\r\n', 'Mar 22 - Mar 28', 'Mar 29 - Apr 4', 'April 5 - 11', 'April 12 - 18', 'April 19 - 25', 'April 26 - May 2')
suicide <- pol %>%
filter(week %in% weeks) %>%
filter(Subtype=='Suicide attempt') %>%
group_by(Year, week) %>%
summarize(count=sum(count))
# Poisson regression
poisson_sui <- glm(count ~ Year, data=suicide, family='poisson')
summary(poisson_sui)
pol_alcohol <- pol %>%
filter(week %in% weeks) %>%
filter(Subtype=='Intoxicated') %>%
group_by(Year, week) %>%
summarize(count=sum(count))
# Poisson regression
poisson_pol_alc <- glm(count ~ Year, data=pol_alcohol, family='quasipoisson')
summary(poisson_pol_alc)
assault <- pol %>%
filter(week %in% weeks) %>%
filter(Subtype=='Assault') %>%
group_by(Year, week) %>%
summarize(count=sum(count))
# Poisson regression
poisson_ass <- glm(count ~ Year, data=assault, family='quasipoisson')
summary(poisson_ass)
domestic <- pol %>%
filter(week %in% weeks) %>%
filter(Subtype=='Domestic dispute') %>%
group_by(Year, week) %>%
summarize(count=sum(count))
# Poisson regression
poisson_dom <- glm(count ~ Year, data=domestic, family='quasipoisson')
summary(poisson_dom)
crisis <- pol %>%
filter(week %in% weeks) %>%
filter(Subtype=='Crisis call volume') %>%
group_by(Year, week) %>%
summarize(count=sum(count))
# Poisson regression
poisson_cri <- glm(count ~ Year, data=crisis, family='quasipoisson')
summary(poisson_cri)
sui <- data.frame(coef(summary(poisson_sui))) %>%
slice(2) %>%
select(z.value, Pr...z..)
pol_alc <- data.frame(coef(summary(poisson_pol_alc))) %>%
slice(2) %>%
select(t.value, Pr...t..)
ass <- data.frame(coef(summary(poisson_ass))) %>%
slice(2) %>%
select(t.value, Pr...t..)
dom <- data.frame(coef(summary(poisson_dom))) %>%
slice(2) %>%
select(t.value, Pr...t..)
cri <- data.frame(coef(summary(poisson_cri))) %>%
slice(2) %>%
select(t.value, Pr...t..)
tot <- rbind.fill(sui, pol_alc, ass, dom, cri)
tot$type <- c('Suicide', 'Alcohol', 'Assault', 'Domestic Disputes', 'Crisis calls')
tot <- tot %>%
rename(`p-val(z)`=Pr...z.., `p-val(t)`=Pr...t..)
write_csv(tot, 'stat_tests/fig3.csv')
week_order <- unique(pol$week)
crisis <- pol %>%
filter(Subtype=='Crisis call volume') %>%
group_by(Year, week) %>%
summarize(count=sum(count)) %>%
mutate(Year=as.factor(Year)) %>%
mutate(week=factor(week, levels=week_order))
p <- ggplot(crisis, aes(x=week, y=count, group=Year)) +
geom_point(aes(color=Year)) +
geom_line(aes(color=Year)) +
theme(axis.text.x = element_text(angle =90, hjust = 1))
p
# library(segmented)
# data <- crisis %>%
#   filter(Year==2020)
# my.lm <- lm(count ~ week, data = data)
# my.seg <- segmented(my.lm, seg.Z = ~ week)
# my.fitted <- fitted(my.seg)
# my.model <- data.frame(week = data$week, count = my.fitted) %>%
#   mutate(week=factor(week, levels=week_order)) %>%
#   mutate(Year=rep(2020, times=27))
# p + geom_line(my.model, mapping=aes(x=week, y=count))
min <- crisis$count[crisis$Year==2020 & crisis$week=='May 31 - June 6']
max <- crisis$count[crisis$Year==2020 & crisis$week=='July 12 - July 18']
(max-min)/min
